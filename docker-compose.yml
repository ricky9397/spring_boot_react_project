version: '3.4'

services:
  nginx:
    container_name: nginx_web
    image: nginx
    build:
      context: proxy
      dockerfile: Dockerfile
    networks:
      - ricky_net
    ports:
      - "80:80"
#      - "443:443"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf
############ 도메인 SSL인증서 발급 후 적용. ###################
      #- ./proxy/data/nginx.conf:/etc/nginx/nginx.conf
#      - ./proxy/data/nginx:/etc/nginx/conf.d
#      - ./proxy/data/certbot/conf:/etc/letsencrypt
#      - ./proxy/data/certbot/www:/var/www/certbot
############################################################
    links:
      - was:spring
      - web:react
    depends_on:
      - was
      - web
################# 도메인 SSL인증서 발급 후 적용. ##############################################################
# 6시간마다 nginx reload
#   command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

#  certbot:
#    image: certbot/certbot
#    volumes:
#      - ./proxy/data/certbot/conf:/etc/letsencrypt
#      - ./proxy/data/certbot/www:/var/www/certbot
# 12시간마다 재발급
#    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  #########################################################################################################

  was:
    image: spring
    container_name: spring_was
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - ricky_net
    links:
      - db:db_mysql
      - web:react
    depends_on:
      - db

  db:
    image: mysql
    container_name: db_mysql
    networks:
      - ricky_net
    environment:
      - MYSQL_DATABASE=ricky_schema
      - MYSQL_USER=ricky
      - MYSQL_PASSWORD=1234
      - MYSQL_ROOT_PASSWORD=password
    volumes:
      - /build/DB/mysql:/var/lib/mysql
    ports:
      - "3306:3306"

  web:
    image: react
    container_name: react_web
    build:
      context: ./react_front
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - ricky_net
    links:
      - was:spring
    volumes:
      - /usr/src/app/node_modules
      - ./react_front:/usr/src/app
    depends_on:
      - was

networks:
  ricky_net:

  


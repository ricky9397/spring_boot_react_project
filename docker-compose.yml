version: '3.4'

services:
  nginx:
    container_name: nginx
    image: nginx
    build:
      context: nginx_Dockerfile
      dockerfile: Dockerfile
    networks:
      - ricky_net
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/nginx.conf
#      - ./conf/:/etc/nginx/conf.d
      - ./nginx/var/lib/letsencrypt:/var/lib/letsencrypt
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./content:/var/www
    links:
      - was:spring
      - react:react
#    entrypoint:
#      - "nginx"
#      - "-g"
#      - "daemon off;"
    depends_on:
      - was
      - react
  was:
    image: spring
    container_name: spring_was
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - ricky_net
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
    links:
      - db:ricky_db
#    entrypoint:
#      - "java"
#      - "-jar"
#      - "-Duser.timezone=Asia/Seoul"
#      - "/ricky.jar"
    depends_on:
      - db
  db:
    image: mysql
    networks:
      - ricky_net
    environment:
      - MYSQL_DATABASE=ricky_schema
      - MYSQL_USER=ricky
      - MYSQL_PASSWORD=1234
      - MYSQL_ROOT_PASSWORD=password
    volumes:
      - /build/DB/mysql:/var/lib/mysql
    ports:
      - "3306:3306"

  react:
    image: react
    container_name: react_web
    build:
      context: ./front
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - ricky_net
    links:
      - was:ricky
    depends_on:
      - was

networks:
  ricky_net:

  


version: '3.4'

services:
  nginx:
    image: nginx
    container_name: nginx_web
    #    build:
    #      context: proxy
    #      dockerfile: Dockerfile
    networks:
      - ricky_net
    ports:
      - "80:80"
    #      - "443:443"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf
      ############ 도메인 SSL인증서 발급 후 적용. ###################
      #- ./proxy/data/nginx.conf:/etc/nginx/nginx.conf
    #      - ./proxy/data/nginx:/etc/nginx/conf.d
    #      - ./proxy/data/certbot/conf:/etc/letsencrypt
    #      - ./proxy/data/certbot/www:/var/www/certbot
    ############################################################
    links:
      - web:react
    depends_on:
      - web
  ################# 도메인 SSL인증서 발급 후 적용. ##############################################################
  # 6시간마다 nginx reload
  #   command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  #  certbot:
  #    image: certbot/certbot
  #    volumes:
  #      - ./proxy/data/certbot/conf:/etc/letsencrypt
  #      - ./proxy/data/certbot/www:/var/www/certbot
  # 12시간마다 재발급
  #    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  #########################################################################################################
  web:
    image: react
    container_name: react_web
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - ricky_net
    links:
      - was:spring
    volumes:
      - /usr/src/app/node_modules
      - .:/usr/src/app
    depends_on:
      - was

networks:
  ricky_net:



